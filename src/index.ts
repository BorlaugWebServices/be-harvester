/* eslint-disable @typescript-eslint/require-await */
/* eslint-disable @typescript-eslint/unbound-method */
/* eslint-disable @typescript-eslint/no-var-requires */
const debug = require("debug")("be-harvester:Main");

import BlockProcessor from "./BlockProcessor";
import {server} from "./rpc";
import {RPC_PORT} from "./config";

debug("Starting harvester");

server.http().listen(RPC_PORT);

async function main() {
    const blockProcessor = new BlockProcessor();
    //await blockProcessor.subscribeNewHeads();

        let blocks = [20999,21018,191866,191887,191905,191926,145408,191946,192434,193492,209717,209850,209893,209898,209981,210005,210051,210071,210097,210124,210166,210185,210202,210220,210240,210257,210270,210288,210318,210334,210350,210364,210379,210397,210411,210431,210444,210466,210488,210507,210530,210552,210566,210589,210860,210873,988080,210896,210910,210935,210947,210959,210973,344785,210986,211021,211037,211056,211070,211082,211099,211111,211123,211141,211153,211169,211182,211196,211206,211217,211231,211298,211341,211475,220660,220676,220690,220702,220718,220738,220755,220769,220783,220801,220814,220827,220839,220852,220864,220876,220894,220911,220923,220938,220950,220963,220979,220996,221007,221018,221034,221046,221057,221071,221083,221147,221160,221172,221184,221195,221206,221220,221232,221246,221291,221304,221316,221329,221342,221353,221365,221384,221398,221414,221444,221457,221473,221485,221496,221521,221604,222418,222435,222453,222490,222502,222515,222529,222542,222557,222571,222584,222599,222614,222627,222639,222653,222674,222685,222699,222715,222743,222756,222774,222787,222802,222817,222833,222848,222862,222875,222888,222903,222916,222928,222944,1212812,222960,222973,222986,222998,223013,223025,223040,223053,223065,223077,223090,223102,1302495,223114,1044093,223125,1038632,223136,223149,223160,224729,224756,225016,256126,256142,256153,256164,256191,256204,518141,344623,344816,453420,453528,518239,518873,519010,727620,1062283,728677,730205,848201,850878,868170,868264,868280,868299,868316,921698,922037,null,935656,988186,1010558,1010804,1022553,1035636,1043963,1044109,1045342,1062303,1074858,1075018,1166121,1166163,1166476,1166760,1167000,1167122,1167253,1177277,1177439,1193778,1194169,1194568,1194728,1194979,1210897,1211313,1212830,1263057,1263135,1263425,1263519,null,null,1297025,1297228,1299746,1300298,null,1301806,1302131,null,1302272,1302502,null,null,null,1315958,1315975,1315987,null,null,1316010,1316235,1316340,1330356,null,1349054,1350067,null,1373000,1373334,1373546]
    // for(let i=0; i< blocks.length; i++){
    //     if(blocks[i]) {
    //         try{
    //             await blockProcessor.getBlockByNumber(blocks[i]);
    //             debug(`$ %d success`, blocks[i]);
    //         } catch (e) {
    //             debug(`$ %d failed`, blocks[i]);
    //         }
    //     }
    //     if(i > 0) {
    //         break
    //     }
    // }
    await blockProcessor.getBlockByNumber(1373546);
    await blockProcessor.getBlockByNumber(1373547);
    //await blockProcessor.subscribeNewHeads();
}

debug("Harvester started");

main().catch(console.error);